<!doctype html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <title>함손 건설기계</title>
    <style>
      * {
        box-sizing: border-box;
      }

      html,
      body {
        margin: 0;
        padding: 0;
        height: 100%;
        overflow: hidden;
        font-family: 'Segoe UI', 'Noto Sans KR', sans-serif;
      }

      header {
        position: fixed;
        top: 0;
        width: 100%;
        height: 70px;
        padding: 0 60px;
        z-index: 1000;
        display: flex;
        align-items: center;
        justify-content: flex-start;
        background-color: transparent; /* ← 여기 변경 */
        color: white; /* 기본 글자색은 흰색으로 */
        transition:
          background-color 0.4s,
          color 0.4s,
          box-shadow 0.3s;
        box-shadow: none; /* 처음에는 그림자도 제거 */
      }

      header.dark {
        background-color: transparent;
        color: white;
        box-shadow: none;
      }

      header.light {
        background-color: #ffffff;
        color: #003a70;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
      }

      .logo {
        font-size: 1.8rem;
        font-weight: 800;
        letter-spacing: -0.5px;
        margin-right: auto;
        color: inherit;
        display: flex;
        align-items: center;
        gap: 12px;
      }

      .logo-img {
        width: 45px;
        height: 45px;
        object-fit: contain;
        filter: none; /* 필터 제거 */
        transition: all 0.3s ease;
        border-radius: 4px;
        background: rgba(255, 255, 255, 0.1);
        padding: 4px;
      }

      header.light .logo-img {
        background: rgba(0, 0, 0, 0.05);
      }

      .logo-img:hover {
        transform: scale(1.05);
        background: rgba(255, 255, 255, 0.2);
      }

      header.light .logo-img:hover {
        background: rgba(0, 0, 0, 0.1);
      }

      nav.center-nav {
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
        display: flex;
        gap: 48px;
        align-items: center;
        height: 100%;
      }

      .menu-item {
        position: relative;
        height: 100%;
        display: flex;
        align-items: center;
      }

      .menu-link {
        font-size: 1rem;
        font-weight: 600;
        padding: 16px 24px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        height: 100%;
        text-decoration: none;
        color: inherit;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
      }

      .menu-link::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(
          90deg,
          transparent,
          rgba(255, 255, 255, 0.1),
          transparent
        );
        transition: left 0.5s ease;
      }

      .menu-link:hover::before {
        left: 100%;
      }

      .menu-link:hover {
        background: linear-gradient(
          135deg,
          rgba(249, 194, 53, 0.1),
          rgba(255, 107, 53, 0.1)
        );
        color: #f9c235;
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(249, 194, 53, 0.2);
      }

      .mega-menu {
        position: absolute;
        top: 100%;
        left: 50%;
        transform: translateX(-50%) translateY(10px);
        min-width: 320px;
        max-width: 1200px;
        padding: 32px 40px;
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(20px);
        border-radius: 16px;
        box-shadow:
          0 20px 40px rgba(0, 0, 0, 0.1),
          0 8px 16px rgba(0, 0, 0, 0.05);
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
        gap: 40px;
        opacity: 0;
        visibility: hidden;
        pointer-events: none;
        transition:
          opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1),
          transform 0.3s cubic-bezier(0.4, 0, 0.2, 1),
          visibility 0.3s;
        width: fit-content;
        border: 1px solid rgba(255, 255, 255, 0.2);
      }

      .menu-item:hover .mega-menu,
      .menu-item:focus-within .mega-menu {
        opacity: 1;
        visibility: visible;
        pointer-events: auto;
        transform: translateX(-50%) translateY(0);
      }

      .menu-column {
        display: flex;
        flex-direction: column;
        position: relative;
      }

      .menu-column::before {
        content: '';
        position: absolute;
        left: -20px;
        top: 0;
        width: 3px;
        height: 100%;
        background: linear-gradient(135deg, #f9c235, #ff6b35);
        border-radius: 2px;
        opacity: 0;
        transition: opacity 0.3s ease;
      }

      .menu-item:hover .menu-column::before {
        opacity: 1;
      }

      .menu-column h4 {
        font-size: 1.1rem;
        font-weight: 700;
        color: #003a70;
        margin-bottom: 16px;
        position: relative;
        padding-bottom: 8px;
      }

      .menu-column h4::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 30px;
        height: 2px;
        background: linear-gradient(90deg, #f9c235, #ff6b35);
        border-radius: 1px;
      }

      .menu-column a {
        color: #555;
        font-size: 0.95rem;
        text-decoration: none;
        margin-bottom: 12px;
        padding: 8px 0;
        transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        display: flex;
        align-items: center;
      }

      .menu-column a:hover {
        color: #003a70;
        transform: translateX(8px);
      }

      #container {
        height: 100vh;
        overflow-y: scroll;
        scroll-snap-type: y mandatory;
        scroll-behavior: smooth;
        padding-top: 70px;
        scrollbar-width: none; /* Firefox */
        -ms-overflow-style: none; /* IE and Edge */
        will-change: scroll-position; /* 스크롤 성능 최적화 */
      }

      #container::-webkit-scrollbar {
        display: none; /* Chrome, Safari, Opera */
      }

      section {
        height: 100vh;
        width: 100vw;
        scroll-snap-align: start;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 2rem;
        transition: background 0.3s;
        will-change: transform; /* GPU 가속 활성화 */
        transform: translateZ(0); /* 하드웨어 가속 강제 */
      }

      .section1 {
        position: relative;
        overflow: hidden;
        padding: 0;
        margin: 0;
        color: white;
        background: black;
      }

      .video-controls {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 10;
        display: flex;
        gap: 16px;
        align-items: center;
      }

      .video-btn {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        border: 2px solid rgba(255, 255, 255, 0.8);
        background: rgba(0, 0, 0, 0.6);
        color: white;
        font-size: 18px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
        backdrop-filter: blur(10px);
      }

      .video-btn:hover {
        background: rgba(255, 255, 255, 0.2);
        border-color: rgba(255, 255, 255, 1);
        transform: scale(1.1);
      }

      .video-btn:active {
        transform: scale(0.95);
      }

      .video-btn.hidden {
        opacity: 0;
        pointer-events: none;
      }

      .background-video {
        position: absolute;
        top: 0;
        left: 0;
        min-width: 100%;
        min-height: 100%;
        width: auto;
        height: auto;
        z-index: 0;
        object-fit: cover;
        will-change: transform; /* GPU 가속 활성화 */
        transform: translateZ(0); /* 하드웨어 가속 강제 */
      }

      .section2 {
        background: black; /* 또는 다른 어두운 색으로 확실하게 지정 */
      }
      .grid-6x2-merged {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        grid-template-rows: repeat(2, 1fr);
        width: 100%;
        height: 100%;
        padding: 0;
        margin: 0;
        gap: 0; /* 간격 제거 */
      }

      .grid-item {
        display: flex;
        align-items: center;
        justify-content: center;
        background: transparent;
        background-color: transparent;
        color: white;
        font-size: 1.3rem;
        font-weight: 600;
        border: none; /* 구분선 제거 */
        box-sizing: border-box;
        transition:
          background-color 0.3s,
          transform 0.3s;
        cursor: pointer;
      }

      .grid-item:hover {
        background-color: rgba(255, 255, 255, 0.15);
        transform: translateY(-2px);
      }

      /* 1번+2번 합쳐진 셀 설정 */
      .item1 {
        grid-column: 1 / span 2; /* 1~2번 열 합침 */
        grid-row: 1 / 2;
      }

      /* 나머지는 자동 배치됨 */
      .item3 {
        grid-column: 3 / 4;
        grid-row: 1 / 2;
      }
      .item4 {
        grid-column: 1 / 2;
        grid-row: 2 / 3;
      }
      .item5 {
        grid-column: 2 / 3;
        grid-row: 2 / 3;
      }
      .item6 {
        grid-column: 3 / 4;
        grid-row: 2 / 3;
      }

      .content-box {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        background: transparent;
      }

      .content-box img {
        width: 100%;
        height: 100%;
        object-fit: contain; /* 잘리지 않게 */
        transition: transform 0.3s ease;
        display: block;
        padding: 20px; /* 필요시 조절 */
      }

      .grid-item {
        /* 기존에 height 고정값이 있다면 제거 */
        overflow: hidden;
      }

      .content-box {
        width: 100%;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        position: relative;
        background: transparent;
      }

      .content-box img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
        display: block;
        padding: 0;
      }

      /* 로더 이미지 특별 처리 */
      .item1 .content-box img {
        object-fit: cover; /* 이미지가 전체 영역을 채우도록 */
        background: none; /* 배경색 제거 */
        padding: 0; /* 여백 제거 */
      }

      /* 로더 텍스트 위치 조정 */
      .item1 .content-box span {
        bottom: 16px; /* 기본 위치로 복원 */
        background: rgba(0, 0, 0, 0.6); /* 배경 투명도 조정 */
        padding: 8px 16px;
        border-radius: 20px;
        font-size: 1.2rem; /* 기본 크기로 복원 */
      }

      .grid-item:hover img {
        transform: scale(1.05);
      }

      /* 로더 호버 효과 조정 */
      .item1:hover img {
        transform: scale(1.02); /* 로더는 더 작게 확대 */
      }

      /* 텍스트 오버레이로 중앙 정렬 */
      .content-box span {
        position: absolute;
        bottom: 16px;
        left: 50%;
        transform: translateX(-50%);
        font-size: 1.2rem;
        font-weight: 600;
        color: white;
        text-shadow: 0 2px 6px rgba(0, 0, 0, 0.6);
        z-index: 2;
        pointer-events: none;
        transition: all 0.3s ease;
      }

      /* 로더 텍스트는 별도 스타일 적용됨 */

      .content-box video {
        width: 100%;
        height: 100%;
        object-fit: cover;
        display: block;
        border: none;
      }

      .section3::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.4); /* 어두운 반투명 오버레이 */
        z-index: 0;
      }

      .section3 {
        position: relative;
        z-index: 1;
        background-image: url('/images/basic.jpg');
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 40px;
      }

      .card-container {
        display: flex;
        gap: 24px;
        justify-content: center;
        flex-wrap: wrap;
        max-width: 1200px;
        width: 100%;
        z-index: 2;
      }

      .card {
        background-color: white;
        border-radius: 16px;
        width: 180px;
        height: 220px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        display: flex;
        justify-content: center;
        align-items: center;
        font-weight: 600;
        font-size: 1.1rem;
        transition:
          transform 0.3s,
          box-shadow 0.3s;
      }

      .card:hover {
        transform: translateY(-6px);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
      }
      .section4 {
        background: #f2f2f2;
        color: #222;
      }
      .section5 {
        background: #003a70;
        color: white;
      }
    </style>
  </head>
  <body>
    <header id="mainHeader" class="dark">
      <div class="logo">
        <img src="/images/logo.png" alt="함손 로고" class="logo-img" />
        함손 건설기계
      </div>
      <nav class="center-nav">
        <div class="menu-item">
          <a href="#section1" class="menu-link">회사소개</a>
          <div class="mega-menu">
            <div class="menu-column">
              <h4>회사 소개</h4>
              <a href="#">인사말</a>
            </div>
            <div class="menu-column">
              <h4>기업 정보</h4>
              <a href="#">유한회사 함손건설기계</a>
              <a href="#">유한회사 밥캣경남지점</a>
              <a href="#">전남건설기계운전학원</a>
              <a href="#">함손제품개발센터</a>
            </div>
          </div>
        </div>

        <div class="menu-item">
          <a href="#section2" class="menu-link">사업소개</a>
          <div class="mega-menu">
            <div class="menu-column">
              <h4>건설 장비</h4>
              <a href="#">로더</a>
              <a href="#">굴착기</a>
            </div>
            <div class="menu-column">
              <h4>???</h4>
              <a href="#">부품 및 서비스</a>
              <a href="#">작업기(어태치먼트)</a>
              <a href="#">학원</a>
            </div>
          </div>
        </div>

        <div class="menu-item">
          <a href="#section4" class="menu-link">제품 문의</a>
          <div class="mega-menu">
            <div class="menu-column">
              <h4>???</h4>
              <a href="#">신차 문의</a>
              <a href="#">렌탈 문의</a>
              <a href="#">중고 문의</a>
            </div>
          </div>
        </div>

        <div class="menu-item">
          <a href="#section5" class="menu-link">고객센터</a>
          <div class="mega-menu">
            <div class="menu-column">
              <h4>???</h4>
              <a href="#">공지사항</a>
              <a href="#">서비스센터 위치</a>
            </div>
          </div>
        </div>
      </nav>
    </header>

    <div id="container">
      <section class="section1" id="section1">
        <video
          autoplay
          muted
          loop
          playsinline
          preload="auto"
          class="background-video"
          id="mainVideo"
        >
          <source src="/video/main.mp4" type="video/mp4" />
        </video>
        <div class="video-controls">
          <button class="video-btn" id="playBtn" title="재생">
            <span>▶</span>
          </button>
          <button class="video-btn" id="pauseBtn" title="일시정지">
            <span>⏸</span>
          </button>
        </div>
      </section>
      <section class="section2" id="section2">
        <div class="grid-6x2-merged">
          <div class="grid-item item1">
            <div class="content-box">
              <img src="/images/roder.jpg" alt="사업1+2 이미지" />
              <span>로더</span>
            </div>
          </div>
          <div class="grid-item item3">
            <div class="content-box">
              <img src="/images/excavator_1.jpg" alt="사업3 이미지" />
              <span>굴착기</span>
            </div>
          </div>
          <div class="grid-item item4">
            <div class="content-box">
              <img src="/images/what_2.png" alt="사업4 이미지" />
              <span>작업기</span>
            </div>
          </div>
          <div class="grid-item item5">
            <div class="content-box">
              <div class="content-box">
                <img src="/images/academy.jpg" alt="사업3 이미지" />
                <span>중장비 학원</span>
              </div>
            </div>
          </div>

          <div class="grid-item item6">
            <div class="content-box">
              <div class="content-box">
                <img src="/images/trade.png" alt="사업3 이미지" />
                <span>무역</span>
              </div>
            </div>
          </div>
        </div>
      </section>
      <section class="section3" id="section3">
        <div class="card-container">
          <div class="card">쇼핑몰</div>
          <div class="card">카카오톡</div>
          <div class="card">Youtube</div>
          <div class="card">인스타그램</div>
        </div>
      </section>
      <section class="section4" id="section4">고객센터 & 푸터</section>
      <section class="section5" id="section5">문의하기</section>
    </div>

    <script>
      const header = document.getElementById('mainHeader');
      const sections = document.querySelectorAll('section');
      const menuItems = document.querySelectorAll('.menu-item');
      let activeMega = null;
      let hideTimer = null;

      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              const isLight = entry.target.classList.contains('section4');
              header.classList.toggle('light', isLight);
              header.classList.toggle('dark', !isLight);
            }
          });
        },
        {
          root: document.querySelector('#container'),
          threshold: 0.6,
        },
      );

      sections.forEach((section) => observer.observe(section));

      menuItems.forEach((menuItem) => {
        const megaMenu = menuItem.querySelector('.mega-menu');

        const showMega = () => {
          if (activeMega && activeMega !== megaMenu) {
            hideMega(activeMega);
          }
          clearTimeout(hideTimer);
          if (megaMenu) {
            megaMenu.style.opacity = '1';
            megaMenu.style.visibility = 'visible';
            megaMenu.style.pointerEvents = 'auto';
            megaMenu.style.transform = 'translateX(-50%) translateY(0)';
            activeMega = megaMenu;
          }
        };

        const hideMega = (targetMenu) => {
          if (targetMenu) {
            targetMenu.style.opacity = '0';
            targetMenu.style.visibility = 'hidden';
            targetMenu.style.pointerEvents = 'none';
            targetMenu.style.transform = 'translateX(-50%) translateY(10px)';
            if (activeMega === targetMenu) activeMega = null;
          }
        };

        menuItem.addEventListener('mouseenter', () => {
          showMega();
        });

        menuItem.addEventListener('mouseleave', () => {
          hideTimer = setTimeout(() => {
            if (megaMenu) hideMega(megaMenu);
          }, 200);
        });

        if (megaMenu) {
          megaMenu.addEventListener('mouseenter', () => {
            clearTimeout(hideTimer);
          });

          megaMenu.addEventListener('mouseleave', () => {
            hideTimer = setTimeout(() => {
              hideMega(megaMenu);
            }, 200);
          });
        }
      });

      // 비디오 컨트롤 기능
      const video = document.getElementById('mainVideo');
      const playBtn = document.getElementById('playBtn');
      const pauseBtn = document.getElementById('pauseBtn');
      let isPlaying = true;

      // 재생 버튼 클릭
      playBtn.addEventListener('click', () => {
        video.play();
        isPlaying = true;
      });

      // 일시정지 버튼 클릭
      pauseBtn.addEventListener('click', () => {
        video.pause();
        isPlaying = false;
      });

      // 비디오 상태 변경 감지
      video.addEventListener('play', () => {
        isPlaying = true;
      });

      video.addEventListener('pause', () => {
        isPlaying = false;
      });

      // 마우스가 섹션1에 있을 때만 컨트롤 표시
      const section1 = document.getElementById('section1');
      const videoControls = document.querySelector('.video-controls');

      section1.addEventListener('mouseenter', () => {
        videoControls.style.opacity = '1';
      });

      section1.addEventListener('mouseleave', () => {
        videoControls.style.opacity = '0.3';
      });

      // 초기 상태 설정
      videoControls.style.opacity = '0.3';

      // 비디오 로딩 최적화
      video.addEventListener('loadeddata', () => {
        // 비디오가 로드되면 GPU 가속 활성화
        video.style.transform = 'translateZ(0)';
      });

      // 스크롤 성능 최적화
      let ticking = false;
      const container = document.querySelector('#container');

      container.addEventListener('scroll', () => {
        if (!ticking) {
          requestAnimationFrame(() => {
            // 스크롤 이벤트 처리
            ticking = false;
          });
          ticking = true;
        }
      });
    </script>
  </body>
</html>
